# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'MXA_DI'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'MXA_DI'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.
models:
  MXA_DI:
    # Config indicated by + and applies to all files under models/example/
    +on_schema_change: "fail"
    +incremental_strategy: "merge"
    enriched:
      +schema: enriched
      +materialized: table
      +format: delta
      +persist_docs:
        relation: true
        columns: true
    dwh:
      +schema: dwh
      +materialized: table
      +format: delta
      +persist_docs:
        relation: true
        columns: true
    pbi_dwh:
      +schema: pbi_dwh
      +materialized: view
      +persist_docs:
        relation: true
        columns: true
    logging:
      +schema: logging
      +materialized: table
    reference:
      +schema: reference
      +materialized: table
      +location_root: /mnt/deltalake/reference/{{ env_var('DBT_USER_SCHEMA') }}
  dbt_artifacts:
    +schema: metadata
    sources:
      +schema: src_metadata
    staging:
      +schema: stg_metadata
  elementary:
    +schema: "elementary"

seeds:
  +schema: seeds

tests:
  +schema: dq
  +store_failures: true

    

on-run-end: 
  - "{% if target.name == 'prod' %}{{ dbt_artifacts.upload_results(results) }}{% endif %}"
  - "{% if (flags.WHICH == 'run')
       and (target.name == 'prod') %} {{ delta_tbl_ops(results) }} {% endif %}"

vars:
  'dbt_date:time_zone': 'Europe/Amsterdam'

dispatch:
  - macro_namespace: dbt_utils
    search_order: ['spark_utils', 'dbt_utils']
